WITH customer_orders AS (
  SELECT
    ORDERS.CUSTOMER_ID,
    ORDERS.ORDER_ID,
    ORDERS.ORDER_DATE,
    ORDERS.ORDER_STATUS
  FROM SALES.ORDERS
  WHERE ORDERS.ORDER_STATUS IN ('SHIPPED', 'DELIVERED')
), customer_order_details AS (
  SELECT
    ORDER_DETAILS.ORDER_ID,
    ORDER_DETAILS.PRODUCT_ID,
    ORDER_DETAILS.QUANTITY,
    ORDER_DETAILS.UNIT_PRICE
  FROM SALES.ORDER_DETAILS
), customer_product_purchases AS (
  SELECT
    CUSTOMER_PRODUCT_PURCHASES.CUSTOMER_ID,
    CUSTOMER_PRODUCT_PURCHASES.PRODUCT_ID,
    SUM(ORDER_DETAILS.QUANTITY) AS TOTAL_PURCHASES
  FROM SALES.ORDER_DETAILS
  JOIN SALES.CUSTOMER_PRODUCT_PURCHASES
  ON ORDER_DETAILS.CUSTOMER_ID = CUSTOMER_PRODUCT_PURCHASES.CUSTOMER_ID
  AND ORDER_DETAILS.PRODUCT_ID = CUSTOMER_PRODUCT_PURCHASES.PRODUCT_ID
  GROUP BY CUSTOMER_PRODUCT_PURCHASES.CUSTOMER_ID, CUSTOMER_PRODUCT_PURCHASES.PRODUCT_ID
), customer_lifetime_value AS (
  SELECT
    CUSTOMER_LIFETIME_VALUE.CUSTOMER_ID,
    SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY) AS LIFETIME_SPEND
  FROM SALES.ORDER_DETAILS
  JOIN SALES.CUSTOMER_LIFETIME_VALUE
  ON ORDER_DETAILS.CUSTOMER_ID = CUSTOMER_LIFETIME_VALUE.CUSTOMER_ID
  GROUP BY CUSTOMER_LIFETIME_VALUE.CUSTOMER_ID
), customer_loyalty_program AS (
  SELECT
    CUSTOMER_ID,
    LOYALTY_TIER,
    REWARD_POINTS
  FROM CUSTOMER_LOYALTY.CUSTOMER_LOYALTY_STATUS
), product_categories AS (
  SELECT
    PRODUCT_ID,
    CATEGORY_ID
  FROM PRODUCTS.PRODUCT_CATEGORIES
), product_details AS (
  SELECT
    PRODUCT_ID,
    PRODUCT_NAME,
    PRODUCT_DESCRIPTION,
    PRODUCT_IMAGE
  FROM PRODUCTS.PRODUCT_DETAILS
), product_inventory AS (
  SELECT
    PRODUCT_ID,
    QUANTITY_IN_STOCK
  FROM PRODUCTS.PRODUCT_INVENTORY
), product_reviews AS (
  SELECT
    PRODUCT_ID,
    CUSTOMER_ID,
    RATING,
    REVIEW_TEXT
  FROM PRODUCTS.PRODUCT_REVIEWS
), product_sales_by_category AS (
  SELECT
    CATEGORY.CATEGORY_NAME,
    SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY) AS TOTAL_SALES
  FROM PRODUCTS.PRODUCT_CATEGORIES CATEGORY
  JOIN PRODUCTS.PRODUCT_DETAILS PRODUCT ON CATEGORY.CATEGORY_ID = PRODUCT.CATEGORY_ID
  JOIN SALES.ORDER_DETAILS ON PRODUCT.PRODUCT_ID = ORDER_DETAILS.PRODUCT_ID
  JOIN SALES.ORDERS ORDERS ON ORDER_DETAILS.ORDER_ID = ORDERS.ORDER_ID
  WHERE ORDERS.ORDER_STATUS IN ('SHIPPED', 'DELIVERED')
  GROUP BY CATEGORY.CATEGORY_NAME
), top_selling_products AS (
  SELECT
    PRODUCT.PRODUCT_ID,
    SUM(ORDER_DETAILS.QUANTITY) AS TOTAL_SALES
  FROM PRODUCTS.PRODUCT_DETAILS PRODUCT
  JOIN SALES.ORDER_DETAILS ON PRODUCT.PRODUCT_ID = ORDER_DETAILS.PRODUCT_ID
  JOIN SALES.ORDERS ORDERS ON ORDER_DETAILS.ORDER_ID = ORDERS.ORDER_ID
  WHERE ORDERS.ORDER_STATUS IN ('SHIPPED', 'DELIVERED')
  GROUP BY PRODUCT.PRODUCT_ID
  ORDER BY TOTAL_SALES DESC
  LIMIT 10
), recent_customer_activity AS (
  SELECT
    CUSTOMER_ID,
    MAX(ORDER_DATE) AS LAST_ORDER_DATE
  FROM SALES.ORDERS
  GROUP BY CUSTOMER_ID
), inactive_customers AS (
  SELECT
    CUSTOMER.CUSTOMER_ID,
    CUSTOMER.FIRST_NAME,
    CUSTOMER.LAST_NAME,
    CUSTOMER.EMAIL_ADDRESS
  FROM CUSTOMER.CUSTOMER
  LEFT JOIN RECENT_CUSTOMER_ACTIVITY ACTIVITY ON CUSTOMER.CUSTOMER_ID = ACTIVITY.CUSTOMER_ID
  WHERE ACTIVITY.LAST_ORDER_DATE IS NULL
  OR DATEDIFF(CURDATE(), ACTIVITY.LAST_ORDER_DATE) > 365
), high_value_customers AS (
  SELECT
    CUSTOMER_ID,
    LIFETIME_SPEND,
    LOYALTY.LOYALTY_TIER
  FROM SALES.CUSTOMER_LIFETIME_VALUE
  JOIN LOYALTY.CUSTOMER_LOYALTY_STATUS
  ON SALES.CUSTOMER_LIFETIME_VALUE.CUSTOMER_ID = LOYALTY.CUSTOMER_LOYALTY_STATUS.CUSTOMER_ID
  WHERE LIFETIME_SPEND > 1000
  AND LOYALTY_TIER IN ('GOLD', 'PLATINUM')
), customer_product_recommendations AS (
  SELECT
    RECOMMENDATION_MODEL.CUSTOMER_ID,
    RECOMMENDATION_MODEL.PRODUCT_ID,
    RECOMMENDATION_MODEL.PREDICTED_PURCHASE_PROBABILITY
  FROM MARKETING.RECOMMENDATION_MODEL
  WHERE RECOMMENDATION_MODEL.CUSTOMER_ID IN (
    SELECT CUSTOMER_ID
    FROM HIGH_VALUE_CUSTOMERS
  )
  AND RECOMMENDATION_MODEL.PRODUCT_ID NOT IN (
    SELECT PRODUCT_ID
    FROM SALES.CUSTOMER_PRODUCT_PURCHASES
    WHERE CUSTOMER_ID = RECOMMENDATION_MODEL.CUSTOMER_ID
  )
  ORDER BY PREDICTED_PURCHASE_PROBABILITY DESC
  LIMIT 10
)
SELECT
  CUSTOMER.FIRST_NAME,
  CUSTOMER.LAST_NAME,
  CUSTOMER_LOYALTY_PROGRAM.LOYALTY_TIER,
  CUSTOMER_LIFETIME_VALUE.LIFETIME_SPEND,
  PRODUCT_SALES_BY_CATEGORY.CATEGORY_NAME,
  SUM(PRODUCT_DETAILS.QUANTITY) AS TOTAL_PRODUCTS_PURCHASED,
  AVG(ORDER_DETAILS.UNIT_PRICE) AS AVERAGE_PRICE_SPENT
FROM
  SALES.CUSTOMER CUSTOMER
  LEFT JOIN SALES.RECENT_CUSTOMER_ACTIVITY ACTIVITY ON CUSTOMER.CUSTOMER_ID = ACTIVITY.CUSTOMER_ID
  LEFT JOIN RETAIL.INACTIVE_CUSTOMERS INACTIVE ON CUSTOMER.CUSTOMER_ID = INACTIVE.CUSTOMER_ID
  LEFT JOIN SALES.CUSTOMER_LOYALTY_PROGRAM LOYALTY_PROGRAM ON CUSTOMER.CUSTOMER_ID = LOYALTY_PROGRAM.CUSTOMER_ID
  LEFT JOIN SALES.CUSTOMER_LIFETIME_VALUE LIFETIME_VALUE ON CUSTOMER.CUSTOMER_ID = LIFETIME_VALUE.CUSTOMER_ID
  LEFT JOIN PRODUCTS.PRODUCT_DETAILS PRODUCT_DETAILS ON CUSTOMER.CUSTOMER_ID = PRODUCT_DETAILS.CUSTOMER_ID
  LEFT JOIN SALES.ORDER_DETAILS ORDER_DETAILS ON PRODUCT_DETAILS.PRODUCT_ID = ORDER_DETAILS.PRODUCT_ID
  LEFT JOIN SALES.ORDERS ORDERS ON ORDER_DETAILS.ORDER_ID = ORDERS.ORDER_ID
  LEFT JOIN PRODUCTS.PRODUCT_CATEGORIES PRODUCT_CATEGORIES ON PRODUCT_DETAILS.PRODUCT_ID = PRODUCT_CATEGORIES.PRODUCT_ID
  LEFT JOIN MARKETING.RECOMMENDATION_MODEL RECOMMENDATION_MODEL ON CUSTOMER.CUSTOMER_ID = RECOMMENDATION_MODEL.CUSTOMER_ID
WHERE ACTIVITY.LAST_ORDER_DATE IS NOT NULL
  AND INACTIVE.CUSTOMER_ID IS NULL
GROUP BY
  CUSTOMER.FIRST_NAME,
  CUSTOMER.LAST_NAME,
  CUSTOMER_LOYALTY_PROGRAM.LOYALTY_TIER,
  CUSTOMER_LIFETIME_VALUE.LIFETIME_SPEND,
  PRODUCT_SALES_BY_CATEGORY.CATEGORY_NAME
